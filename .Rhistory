select(-fold) %>%
pivot_wider(names_from = metrics, values_from = value) #%>%
iris
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
select(-fold) %>%
pivot_wider(names_from = metrics, values_from = value)
df
iris
df
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
pivot_wider(names_from = metrics, values_from = value) #%>%
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation)
)
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold)
vegetation_levels = c(
"Macro Average",
"Weighted Average",
"Dwarf Pine",
"Dwarf Bamboo",
"Other Vegetations",
"Non Vegetation",
"Sky"
)
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels))
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation)
)
df %>% group_by(vegetation) %>% summarise(sd = sd(value))
df %>% group_by(vegetation) %>% select(-support) %>% group_by(metrics) %>% summarise(sd = sd(value))
df %>% filter(metrics != "support") %>% group_by(vegetation, metrics) %>% summarise(sd = sd(value))
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value)
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation)
)
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
theme_gtsummary_mean_sd()
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation)
)
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
theme_gtsummary_mean_sd()
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation),
label = ""
)
?tbl_summary
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
theme_gtsummary_mean_sd()
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation)
)
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
theme_gtsummary_mean_sd()
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation),
label = metrics ~ "Metrics"
)
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
theme_gtsummary_mean_sd()
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation),
label = (precision ~ "Metrics")
)
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
theme_gtsummary_mean_sd()
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation),
label = list(
precision ~ "Precision",
recall ~ "Recall",
`f1-score` ~ "F1 score")
)
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
theme_gtsummary_mean_sd()
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation),
label = list(
precision ~ "Precision",
recall ~ "Recall",
`f1-score` ~ "F1 score")
) %>%
modify_header(label = "")
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
theme_gtsummary_mean_sd()
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation),
label = list(
precision ~ "Precision",
recall ~ "Recall",
`f1-score` ~ "F1 Score")
) %>%
modify_header(label = "")
=======
tinytex::install_tinytex()
interpolate <- function(in_path, out_path, res, max_dist, fun=modal) {
print(str_c("Reading ", in_path, " ......"))
points <- read_csv(
in_path
) %>%
st_as_sf(coords = c("x", "y")) %>%
st_set_crs(6690) %>%
mutate(z = as.integer(z)) %>%
select(-c(u, v, z))
print("Rasterizing point data ......")
ras <- st_rasterize(points, dx = res, dy = res)
rm(points)
gc()
ras <- ras %>%
as("Raster") %>%
terra::rast()
times <- ceiling(max_dist / res)
for (i in 1:times) {
print(str_c("Interpolating ......", i, " of ", times, " iterations"))
ras <- ras %>%
terra::focal(3, mean, na.policy="only", na.rm=TRUE)
}
print(str_c("Saving file to ", out_path, " ......"))
terra::writeRaster(ras, out_path, overwrite=TRUE)
rm(ras)
gc()
print("Finished !")
}
files <- c("data/georectified.csv", "data/res2012_cnn_9x9.csv", "data/res2020_cnn_9x9.csv",
"data/diff_haimatsu.csv", "data/diff_sasa.csv")
for(file in files) {
out_path <- stringr::str_replace(file, "csv", "tiff")
interpolate(file, out_path, 0.5, 1)
}
library(sf)
library(tidyverse)
library(stars)
library(terra)
library(stringr)
setwd("~/VegetationMapPaper/")
interpolate <- function(in_path, out_path, res, max_dist, fun=modal) {
print(str_c("Reading ", in_path, " ......"))
points <- read_csv(
in_path
) %>%
st_as_sf(coords = c("x", "y")) %>%
st_set_crs(6690) %>%
mutate(z = as.integer(z)) %>%
select(-c(u, v, z))
print("Rasterizing point data ......")
ras <- st_rasterize(points, dx = res, dy = res)
rm(points)
gc()
ras <- ras %>%
as("Raster") %>%
terra::rast()
times <- ceiling(max_dist / res)
for (i in 1:times) {
print(str_c("Interpolating ......", i, " of ", times, " iterations"))
ras <- ras %>%
terra::focal(3, mean, na.policy="only", na.rm=TRUE)
}
print(str_c("Saving file to ", out_path, " ......"))
terra::writeRaster(ras, out_path, overwrite=TRUE)
rm(ras)
gc()
print("Finished !")
}
files <- c("data/georectified.csv", "data/res2012_cnn_9x9.csv", "data/res2020_cnn_9x9.csv",
"data/diff_haimatsu.csv", "data/diff_sasa.csv")
for(file in files) {
out_path <- stringr::str_replace(file, "csv", "tiff")
interpolate(file, out_path, 0.5, 1)
}
interpolate <- function(in_path, out_path, res, max_dist, fun=modal) {
print(str_c("Reading ", in_path, " ......"))
points <- read_csv(
in_path
) %>%
st_as_sf(coords = c("x", "y")) %>%
st_set_crs(6690) %>%
mutate(z = as.integer(z)) %>%
select(-c(u, v, z))
print("Rasterizing point data ......")
ras <- st_rasterize(points, dx = res, dy = res)
rm(points)
gc()
ras <- ras %>%
as("Raster") %>%
terra::rast()
times <- ceiling(max_dist / res)
for (i in 1:times) {
print(str_c("Interpolating ......", i, " of ", times, " iterations"))
ras <- ras %>%
terra::focal(3, fun, na.policy="only", na.rm=TRUE)
}
print(str_c("Saving file to ", out_path, " ......"))
terra::writeRaster(ras, out_path, overwrite=TRUE)
rm(ras)
gc()
print("Finished !")
}
files <- c("data/georectified.csv", "data/res2012_cnn_9x9.csv", "data/res2020_cnn_9x9.csv",
"data/diff_haimatsu.csv", "data/diff_sasa.csv")
for(file in files) {
out_path <- stringr::str_replace(file, "csv", "tiff")
interpolate(file, out_path, 0.5, 1)
}
file <- "data/georectified.csv"
out_path <- stringr::str_replace(file, "csv", "tiff")
interpolate(file, out_path, 0.5, 1, fun=median)
library(sf)
library(tidyverse)
library(stars)
library(terra)
library(stringr)
setwd("~/VegetationMapPaper/")
interpolate <- function(in_path, out_path, res, max_dist, fun=terra::modal) {
print(str_c("Reading ", in_path, " ......"))
points <- read_csv(
in_path
) %>%
st_as_sf(coords = c("x", "y")) %>%
st_set_crs(6690) %>%
mutate(z = as.integer(z)) %>%
select(-c(u, v, z))
print("Rasterizing point data ......")
ras <- st_rasterize(points, dx = res, dy = res)
rm(points)
gc()
ras <- ras %>%
as("Raster") %>%
terra::rast()
times <- ceiling(max_dist / res)
for (i in 1:times) {
print(str_c("Interpolating ......", i, " of ", times, " iterations"))
ras <- ras %>%
terra::focal(3, fun, na.policy="only", na.rm=TRUE)
}
print(str_c("Saving file to ", out_path, " ......"))
terra::writeRaster(ras, out_path, overwrite=TRUE)
rm(ras)
gc()
print("Finished !")
}
file <- "data/georectified.csv"
out_path <- stringr::str_replace(file, "csv", "tiff")
interpolate(file, out_path, 0.5, 1, fun=mean)
interpolate(file, out_path, 0.5, 1, fun=max)
in_path = file
res = 0.5
max_dist = 1
print(str_c("Reading ", in_path, " ......"))
points <- read_csv(
in_path
) %>%
st_as_sf(coords = c("x", "y")) %>%
st_set_crs(6690) %>%
mutate(z = as.integer(z)) %>%
select(-c(u, v, z))
points <- read_csv(
in_path
)
nrow(points)
"data/res2012_cnn_9x9.csv"
in_path <- "data/res2012_cnn_9x9.csv"
points <- read_csv(
in_path
)
nrow(points)
>>>>>>> 7980f4c5c790a2995fb30ed760f777c8357a3ca4
far = 1
near = -1
-(far+near)/(far -near)
-2 * far*near/(far-near)
library(tidyverse)
library(stars)
library(sf)
change_names <- function(nums) {
case_when(
nums == 1 ~ "Dwarf Bamboo",
nums == 2 ~ "No Vegetation",
nums == 3 ~ "Other Vegetation",
nums == 4 ~ "Sky",
nums == 5 ~ "Dwarf Pine"
)
}
vege2012 <- read_stars("results/cnn_lstm5x5_cv_5_ep_200/res2012_cnn_5x5.tiff")
vege2021 <- read_stars("results/cnn_lstm5x5_cv_5_ep_200/res2021_cnn_5x5.tiff")
dem <- read_stars("data/mrd_dem_1m.tiff") %>%
st_warp(vege2012)
# Get raster resolutions
res <- st_dimensions(vege2012) %>%
as_tibble() %>%
pull(delta) %>%
as.numeric() %>%
abs()
df <- c(vege2012, vege2021, dem) %>%
as_tibble() %>%
rename(
v2012 = res2012_cnn_5x5.tiff,
v2021 = res2021_cnn_5x5.tiff,
elevation = mrd_dem_1m.tiff
) %>%
pivot_longer(
cols = c("v2012", "v2021"),
names_to = "year",
values_to = "vegetation",
names_prefix = "v"
) %>%
filter(is.na(vegetation) == FALSE) %>%
mutate(vegetation = change_names(vegetation)) %>%
filter(vegetation != "Sky")
# Vegetation histogram along elevation
breaks <- seq(2350, 3000, 50)
p <- df %>%
group_by(vegetation, year) %>%
ggplot(aes(x = elevation, fill = year)) +
geom_histogram(
aes(y = after_stat(count * res[1] * res[2])),
breaks = breaks,
alpha = 0.3,
position = "identity"
) +
facet_wrap(~vegetation) +
ylab(expression(paste ("Area (", {mm^2}, ")", sep = ""))) +
xlab("Elevation") +
theme_minimal() +
scale_fill_hue(direction = -1)
pg <- ggplot_build(p)
pg
p <- df %>%
group_by(vegetation, year) %>%
ggplot(aes(x = elevation, fill = year)) +
geom_histogram(
aes(y = after_stat(count * res[1] * res[2])),
breaks = breaks,
alpha = 0.3,
position = "identity"
) +
facet_wrap(~vegetation, scales="free") +
ylab(expression(paste ("Area (", {mm^2}, ")", sep = ""))) +
xlab("Elevation") +
theme_minimal() +
scale_fill_hue(direction = -1)
df %>%
group_by(vegetation, year) %>%
ggplot(aes(x = elevation, fill = year)) +
geom_histogram(
aes(y = after_stat(count * res[1] * res[2])),
breaks = breaks,
alpha = 0.3,
position = "identity"
) +
facet_wrap(~vegetation, scales="free") +
ylab(expression(paste ("Area (", {mm^2}, ")", sep = ""))) +
xlab("Elevation") +
theme_minimal() +
scale_fill_hue(direction = -1)
# Elevation-axis movement of the vegetation
df %>%
group_by(vegetation, year) %>%
summarise(
mean_elevation = mean(elevation)
)
df %>%
group_by(vegetation, year) %>%
summarise(
elevation_2012 = mean(elevation[year == "2012"]),
elevation_2021 = mean(elevation[year == "2021"])
) %>%
select(-year) %>%
fill(elevation_2012, .direction = "down") %>%
fill(elevation_2021, .direction = "up") %>%
distinct() %>%
mutate(movement = elevation_2021 - elevation_2012)
df %>%
group_by(vegetation, year) %>%
summarise(
elevation_2012 = mean(elevation[year == "2012"]),
elevation_2021 = mean(elevation[year == "2021"])
) %>%
select(-year) %>%
fill(elevation_2012, .direction = "down") %>%
fill(elevation_2021, .direction = "up") %>%
distinct() %>%
mutate(movement = elevation_2021 - elevation_2012)
# Increase, decrease in area
df %>%
group_by(vegetation, year) %>%
tally() %>%
mutate(area = n * res[1] * res[2]) %>%
mutate(
area_2012 = area[year == "2012"],
area_2021 = area[year == "2021"]
) %>%
select(-c(year, n, area)) %>%
distinct() %>%
mutate(diff = area_2021 - area_2012)
df %>%
group_by(vegetation, year) %>%
ggplot(aes(x = elevation, fill = year)) +
geom_histogram(
aes(y = after_stat(count * res[1] * res[2])),
breaks = breaks,
alpha = 0.5,
position = "identity"
) +
facet_wrap(~vegetation, scales="free") +
ylab(expression(paste ("Area (", {mm^2}, ")", sep = ""))) +
xlab("Elevation") +
theme_minimal() +
scale_fill_hue(direction = -1)
df %>%
group_by(vegetation, year) %>%
ggplot(aes(x = elevation, fill = year)) +
geom_histogram(
aes(y = after_stat(count * res[1] * res[2])),
breaks = breaks,
alpha = 0.3,
position = "identity"
) +
facet_wrap(~vegetation, scales="free") +
ylab(expression(paste ("Area (", {mm^2}, ")", sep = ""))) +
xlab("Elevation") +
theme_minimal() +
scale_fill_hue(direction = -1)
