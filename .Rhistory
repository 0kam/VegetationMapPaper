<<<<<<< HEAD
library(tidyverse)
translate_classes <- function(names) {
res = c()
for (i in 1:length(names)) {
res[i] <-
switch (names[i],
"コケモモ-ハイマツ群集" = "Dwarf Pine",
"ササ群落" = "Dwarf Bamboo",
"その他植生" = "Other Vegetations",
"裸地等" = "Non Vegetation",
"空" = "Sky",
"macro avg" = "Macro Average",
"weighted avg" = "Weighted Average"
)
}
return(res)
}
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold)) %>%
mutate()
df %>%
filter(metrics == "f1-score") %>%
select(-metrics) %>%
mutate(vegetation = translate_classes(vegetation)) %>%
group_by(vegetation) %>%
summarize(
mean = mean(value),
min = min(value),
max = max(value)
)
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold)) %>%
mutate()
df %>%
filter(metrics == "f1-score") %>%
select(-metrics) %>%
mutate(vegetation = translate_classes(vegetation)) %>%
group_by(vegetation) %>%
summarize(
mean = mean(value),
min = min(value),
max = max(value)
)
install.packages("gt")
library(tidyverse)
library(gtsummary)
translate_classes <- function(names) {
res = c()
for (i in 1:length(names)) {
res[i] <-
switch (names[i],
"コケモモ-ハイマツ群集" = "Dwarf Pine",
"ササ群落" = "Dwarf Bamboo",
"その他植生" = "Other Vegetations",
"裸地等" = "Non Vegetation",
"空" = "Sky",
"macro avg" = "Macro Average",
"weighted avg" = "Weighted Average"
)
}
return(res)
}
df %>%
filter(metrics == "f1-score") %>%
select(-metrics) %>%
mutate(vegetation = translate_classes(vegetation)) %>%
tbl_summary()
df %>%
filter(metrics == "f1-score") %>%
select(-metrics) %>%
mutate(vegetation = translate_classes(vegetation)) %>%
group_by("vegetation") %>%
tbl_summary()
df %>%
filter(metrics == "f1-score") %>%
select(-metrics) %>%
mutate(vegetation = translate_classes(vegetation)) %>%
tbl_summary(by = vegetation)
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
tbl_summary(
by = c(vegetation, metrics),)
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
tbl_summary(
by = c(vegetation),)
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation)
)
iris
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
select(-fold) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
tbl_summary(
by = c(vegetation)
)
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
select(-fold) %>%
pivot_wider(names_from = metrics, values_from = value)
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
select(-fold) %>%
pivot_wider(names_from = metrics, values_from = value) #%>%
iris
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
select(-fold) %>%
pivot_wider(names_from = metrics, values_from = value)
df
iris
df
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
pivot_wider(names_from = metrics, values_from = value) #%>%
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation)
)
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold)
vegetation_levels = c(
"Macro Average",
"Weighted Average",
"Dwarf Pine",
"Dwarf Bamboo",
"Other Vegetations",
"Non Vegetation",
"Sky"
)
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels))
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation)
)
df %>% group_by(vegetation) %>% summarise(sd = sd(value))
df %>% group_by(vegetation) %>% select(-support) %>% group_by(metrics) %>% summarise(sd = sd(value))
df %>% filter(metrics != "support") %>% group_by(vegetation, metrics) %>% summarise(sd = sd(value))
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value)
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation)
)
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
theme_gtsummary_mean_sd()
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation)
)
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
theme_gtsummary_mean_sd()
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation),
label = ""
)
?tbl_summary
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
theme_gtsummary_mean_sd()
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation)
)
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
theme_gtsummary_mean_sd()
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation),
label = metrics ~ "Metrics"
)
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
theme_gtsummary_mean_sd()
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation),
label = (precision ~ "Metrics")
)
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
theme_gtsummary_mean_sd()
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation),
label = list(
precision ~ "Precision",
recall ~ "Recall",
`f1-score` ~ "F1 score")
)
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
theme_gtsummary_mean_sd()
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation),
label = list(
precision ~ "Precision",
recall ~ "Recall",
`f1-score` ~ "F1 score")
) %>%
modify_header(label = "")
df <- read_csv("../runs/cnn_lstm9x9_cv_5_ep_200/staritfied_cv.csv",
col_select = c(metrics, vegetation, value, fold))
theme_gtsummary_mean_sd()
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
pivot_wider(names_from = metrics, values_from = value) %>%
select(-fold) %>%
tbl_summary(
by = c(vegetation),
label = list(
precision ~ "Precision",
recall ~ "Recall",
`f1-score` ~ "F1 Score")
) %>%
modify_header(label = "")
=======
tinytex::install_tinytex()
interpolate <- function(in_path, out_path, res, max_dist, fun=modal) {
print(str_c("Reading ", in_path, " ......"))
points <- read_csv(
in_path
) %>%
st_as_sf(coords = c("x", "y")) %>%
st_set_crs(6690) %>%
mutate(z = as.integer(z)) %>%
select(-c(u, v, z))
print("Rasterizing point data ......")
ras <- st_rasterize(points, dx = res, dy = res)
rm(points)
gc()
ras <- ras %>%
as("Raster") %>%
terra::rast()
times <- ceiling(max_dist / res)
for (i in 1:times) {
print(str_c("Interpolating ......", i, " of ", times, " iterations"))
ras <- ras %>%
terra::focal(3, mean, na.policy="only", na.rm=TRUE)
}
print(str_c("Saving file to ", out_path, " ......"))
terra::writeRaster(ras, out_path, overwrite=TRUE)
rm(ras)
gc()
print("Finished !")
}
files <- c("data/georectified.csv", "data/res2012_cnn_9x9.csv", "data/res2020_cnn_9x9.csv",
"data/diff_haimatsu.csv", "data/diff_sasa.csv")
for(file in files) {
out_path <- stringr::str_replace(file, "csv", "tiff")
interpolate(file, out_path, 0.5, 1)
}
library(sf)
library(tidyverse)
library(stars)
library(terra)
library(stringr)
setwd("~/VegetationMapPaper/")
interpolate <- function(in_path, out_path, res, max_dist, fun=modal) {
print(str_c("Reading ", in_path, " ......"))
points <- read_csv(
in_path
) %>%
st_as_sf(coords = c("x", "y")) %>%
st_set_crs(6690) %>%
mutate(z = as.integer(z)) %>%
select(-c(u, v, z))
print("Rasterizing point data ......")
ras <- st_rasterize(points, dx = res, dy = res)
rm(points)
gc()
ras <- ras %>%
as("Raster") %>%
terra::rast()
times <- ceiling(max_dist / res)
for (i in 1:times) {
print(str_c("Interpolating ......", i, " of ", times, " iterations"))
ras <- ras %>%
terra::focal(3, mean, na.policy="only", na.rm=TRUE)
}
print(str_c("Saving file to ", out_path, " ......"))
terra::writeRaster(ras, out_path, overwrite=TRUE)
rm(ras)
gc()
print("Finished !")
}
files <- c("data/georectified.csv", "data/res2012_cnn_9x9.csv", "data/res2020_cnn_9x9.csv",
"data/diff_haimatsu.csv", "data/diff_sasa.csv")
for(file in files) {
out_path <- stringr::str_replace(file, "csv", "tiff")
interpolate(file, out_path, 0.5, 1)
}
interpolate <- function(in_path, out_path, res, max_dist, fun=modal) {
print(str_c("Reading ", in_path, " ......"))
points <- read_csv(
in_path
) %>%
st_as_sf(coords = c("x", "y")) %>%
st_set_crs(6690) %>%
mutate(z = as.integer(z)) %>%
select(-c(u, v, z))
print("Rasterizing point data ......")
ras <- st_rasterize(points, dx = res, dy = res)
rm(points)
gc()
ras <- ras %>%
as("Raster") %>%
terra::rast()
times <- ceiling(max_dist / res)
for (i in 1:times) {
print(str_c("Interpolating ......", i, " of ", times, " iterations"))
ras <- ras %>%
terra::focal(3, fun, na.policy="only", na.rm=TRUE)
}
print(str_c("Saving file to ", out_path, " ......"))
terra::writeRaster(ras, out_path, overwrite=TRUE)
rm(ras)
gc()
print("Finished !")
}
files <- c("data/georectified.csv", "data/res2012_cnn_9x9.csv", "data/res2020_cnn_9x9.csv",
"data/diff_haimatsu.csv", "data/diff_sasa.csv")
for(file in files) {
out_path <- stringr::str_replace(file, "csv", "tiff")
interpolate(file, out_path, 0.5, 1)
}
file <- "data/georectified.csv"
out_path <- stringr::str_replace(file, "csv", "tiff")
interpolate(file, out_path, 0.5, 1, fun=median)
library(sf)
library(tidyverse)
library(stars)
library(terra)
library(stringr)
setwd("~/VegetationMapPaper/")
interpolate <- function(in_path, out_path, res, max_dist, fun=terra::modal) {
print(str_c("Reading ", in_path, " ......"))
points <- read_csv(
in_path
) %>%
st_as_sf(coords = c("x", "y")) %>%
st_set_crs(6690) %>%
mutate(z = as.integer(z)) %>%
select(-c(u, v, z))
print("Rasterizing point data ......")
ras <- st_rasterize(points, dx = res, dy = res)
rm(points)
gc()
ras <- ras %>%
as("Raster") %>%
terra::rast()
times <- ceiling(max_dist / res)
for (i in 1:times) {
print(str_c("Interpolating ......", i, " of ", times, " iterations"))
ras <- ras %>%
terra::focal(3, fun, na.policy="only", na.rm=TRUE)
}
print(str_c("Saving file to ", out_path, " ......"))
terra::writeRaster(ras, out_path, overwrite=TRUE)
rm(ras)
gc()
print("Finished !")
}
file <- "data/georectified.csv"
out_path <- stringr::str_replace(file, "csv", "tiff")
interpolate(file, out_path, 0.5, 1, fun=mean)
interpolate(file, out_path, 0.5, 1, fun=max)
in_path = file
res = 0.5
max_dist = 1
print(str_c("Reading ", in_path, " ......"))
points <- read_csv(
in_path
) %>%
st_as_sf(coords = c("x", "y")) %>%
st_set_crs(6690) %>%
mutate(z = as.integer(z)) %>%
select(-c(u, v, z))
points <- read_csv(
in_path
)
nrow(points)
"data/res2012_cnn_9x9.csv"
in_path <- "data/res2012_cnn_9x9.csv"
points <- read_csv(
in_path
)
nrow(points)
>>>>>>> 7980f4c5c790a2995fb30ed760f777c8357a3ca4
