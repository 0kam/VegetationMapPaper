install.packages(c("sf", "stars"))
install.packages(c("sf", "stars"))
install.packages(c("sf", "stars"))
install.packages(c("sf", "stars"))
install.packages(c("sf", "stars"))
install.packages(c("sf", "stars"))
install.packages(c("sf", "stars"))
library(tidyverse)
library(stars)
library(sf)
change_names <- function(nums) {
case_when(
nums == 1 ~ "Dwarf Bamboo",
nums == 2 ~ "Other Vegetation",
nums == 3 ~ "No Vegetation",
nums == 4 ~ "Rowans",
nums == 5 ~ "Maple",
nums == 6 ~ "Montane Alder",
nums == 7 ~ "Dwarf Pine"
)
}
vege_levels <- c(
"Dwarf Pine",
"Dwarf Bamboo",
"Rowans",
"Golden Birch",
"Montane Alder",
"Other Vegetation",
"No Vegetation"
)
rnn <- read_stars("results/rnn.tiff")
dem <- read_stars("data/mrd_dem_1m.tiff") %>%
st_warp(rnn)
# Get raster resolutions
res <- st_dimensions(rnn) %>%
as_tibble() %>%
pull(delta) %>%
as.numeric() %>%
abs()
install.packages(c("ggspatial", "magick"))
install.packages(c("ggspatial", "magick"))
install.packages(c("ggspatial", "magick"))
install.packages(c("ggspatial", "magick"))
library(stars)
library(tidyverse)
library(ggspatial)
setwd("~/Projects/VegetationMapPaper/")
cmap = c(
"#2aa198", # Dwarf pine
"#859900", # Dwarf bamboo
"#dc322f", # Rowans
"#b58900", # Birch
"#6c71c4", # Montane Alder
"#eee8d5", # Other vegetation
"#c0c0c0" # No vegetation
)
vegetation_levels <- c(
"Dwarf Pine",
"Dwarf Bamboo",
"Rowans",
"Maple",
"Montane Alder",
"Other Vegetation",
"No Vegetation"
)
cmap = c(
"#2aa198", # Dwarf pine
"#859900", # Dwarf bamboo
"#dc322f", # Rowans
"#b58900", # Maple
"#6c71c4", # Montane Alder
"#eee8d5", # Other vegetation
"#c0c0c0" # No vegetation
)
vegetation_levels <- c(
"Dwarf Pine",
"Dwarf Bamboo",
"Rowans",
"Maple",
"Montane Alder",
"Other Vegetation",
"No Vegetation"
)
ras <- read_stars("results/rnn.tiff") %>%
rename(vegetation = rnn.tiff) %>%
mutate(vegetation = as.integer(vegetation)) %>%
mutate(
vegetation = case_when(
vegetation == 1 ~ "Dwarf Bamboo",
vegetation == 2 ~ "Other Vegetation",
vegetation == 3 ~ "No Vegetation",
vegetation == 4 ~ "Rowans",
vegetation == 5 ~ "Birch",
vegetation == 6 ~ "Montane Alder",
vegetation == 7 ~ "Dwarf Pine"
)
) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels))
ras <- read_stars("results/rnn.tiff") %>%
rename(vegetation = rnn.tiff) %>%
mutate(vegetation = as.integer(vegetation)) %>%
mutate(
vegetation = case_when(
vegetation == 1 ~ "Dwarf Bamboo",
vegetation == 2 ~ "Other Vegetation",
vegetation == 3 ~ "No Vegetation",
vegetation == 4 ~ "Rowans",
vegetation == 5 ~ "Maple",
vegetation == 6 ~ "Montane Alder",
vegetation == 7 ~ "Dwarf Pine"
)
) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels))
dem <- read_stars("data/mrd_dem_1m.tiff") %>%
st_crop(ras) %>%
rename(Elevation = mrd_dem_1m.tiff)
dem <- read_stars("data/dem_small.tiff")
cont <- st_contour(dem, contour_lines = T)
p1 <- ggplot() +
geom_sf(data = cont, size = 0.1) +
geom_stars(
mapping = aes(x = x, y = y, fill = vegetation),
data = ras
) +
scale_fill_manual(values = cmap, na.value = "transparent") +
labs(x = "Longitude", y = "Latitude", fill = "Vegetation") +
theme_minimal() +
theme(
axis.text = element_text(size = 18),
text = element_text(size = 20),
plot.background = element_rect(fill = "white")
)
p1
ggsave("results/vegemap.png", p1, width = 10, height = 10)
library(magick)
rnn <- magick::image_read("results/rnn.png")
vegemap <- magick::image_read("results/vegemap.png")
img <- c(rnn, vegemap)
imgs <- image_append(image_scale(img, "x2000"))
image_write(imgs, "paper/paper_files/figures/vege.png")
library(magick)
rnn <- magick::image_read("results/rnn.png")
ggsave("results/vegemap.png", p1, width = 12, height = 8)
library(magick)
rnn <- magick::image_read("results/rnn.png")
vegemap <- magick::image_read("results/vegemap.png")
img <- c(rnn, vegemap)
imgs <- image_append(image_scale(img, "x2000"))
image_write(imgs, "paper/paper_files/figures/vege.png")
setwd("~/Projects/VegetationMapPaper")
library(tidyverse)
library(magrittr)
library(kableExtra)
library(fs)
library(lubridate)
setwd("~/Projects/VegetationMapPaper")
translate_classes <- function(names) {
res <- c()
for (i in 1:length(names)) {
res[i] <-
switch (names[i],
"ハイマツ" = "Dwarf Pine",
"ササ" = "Dwarf Bamboo",
"ナナカマド" = "Rowans",
"ダケカンバ" = "Maple",
"ミヤマハンノキ" = "Montane Alder",
"その他植生" = "Other vegetation",
"無植生" = "Non Vegetation",
"macro avg" = "Macro Average",
"weighted avg" = "Weighted Average"
)
}
return(res)
}
vegetation_levels <- c(
"Macro Average",
"Weighted Average",
"Dwarf Pine",
"Dwarf Bamboo",
"Rowans",
"Birch",
"Montane Alder",
"Other vegetation",
"Non Vegetation"
)
vegetation_levels <- c(
"Macro Average",
"Weighted Average",
"Dwarf Pine",
"Dwarf Bamboo",
"Rowans",
"Maple",
"Montane Alder",
"Other vegetation",
"Non Vegetation"
)
summarise_cv <- function(path) {
out <- str_replace(path, ".csv", "_sum.csv")
df <- read_csv(path,
col_select = c(metrics, vegetation, value, fold))
df %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
group_by(., vegetation, metrics) %>%
summarise(
mean = sprintf("%1.3f", mean(value)),
sd = sprintf("(%1.3f)", sd(value))
) %>%
pivot_longer(cols = c(mean, sd), names_to = "var") %>%
pivot_wider(names_from = metrics, values_from = value) %>%
mutate(path = path) %T>%
write_csv(out)
}
read_cv <- function(path) {
read_csv(path, col_select = c(metrics, vegetation, value, fold)) %>%
filter(metrics != "support") %>%
mutate(vegetation = translate_classes(vegetation)) %>%
mutate(vegetation = factor(vegetation, levels = vegetation_levels)) %>%
mutate(path = path)
}
paths <- list.files(path = "runs/cv", pattern = ".*stratified_cv.csv",
recursive = TRUE, full.names = TRUE)
df <- paths %>%
map(read_cv) %>%
reduce(bind_rows)
df <- df %>%
mutate(path = str_remove_all(path, "runs/cv/|stratified_cv.csv")) %>%
mutate(kernel_size = str_extract(path, ".x.")) %>%
mutate(date = str_extract(path, "\\d{8}")) %>%
mutate(date = ymd(date)) %>%
filter(metrics == "f1-score") %>%
mutate(multidays = is.na(date))
p1 <- df %>%
filter(vegetation != "Macro Average") %>%
filter(vegetation != "Weighted Average") %>%
mutate(date = as.character(date)) %>%
mutate(date = ifelse(is.na(date), "Multidays", date)) %>%
mutate(date = ifelse(str_detect(path, "rnn"), "Multidays RNN", date)) %>%
ggplot(aes(x = date, y = value)) +
geom_boxplot() +
ylab("F1 score") +
xlab("Date") +
facet_wrap(~ vegetation, nrow = 2) +
theme_minimal() +
theme(
axis.text = element_text(size = 18),
text = element_text(size = 20),
axis.text.x = element_text(angle = 60, hjust = 1),
plot.background = element_rect(fill = "white"),
panel.spacing = grid::unit(2, "lines")
)
p1
ggsave(file = "results/cv.png", plot = p1, width = 12, height = 6)
